name: java-build-8

on:
  push:
    branches:
      - 'main'
      - 'podman'
    paths:
      - java/build/alpine/8/Dockerfile
      - java/build/alpine/8/version.json

jobs:
  build:
    name: Build and push image
    environment: production
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v2

    - name: Install qemu dependency
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-user-static

    - name: Get JDK runtime iamge tag
      id: jdk-rt-image-tag
      run: |
        echo -n ::set-output name=JDK_RT_IMG_TAG::
        jq -r '.jdkRuntimeImageTag' java/build/alpine/8/version.json

    - name: Get Maven version
      id: maven-version
      run: |
        echo -n ::set-output name=MAVEN_VERSION::
        jq -r '.mavenVersion' java/build/alpine/8/version.json

    - name: Get Maven checksum
      id: maven-checksum
      run: |
        echo -n ::set-output name=MAVEN_CHECKSUM::
        jq -r '.mavenChecksum' java/build/alpine/8/version.json

    - name: Get OpenJDK version
      id: openjdk-version
      run: |
        echo -n ::set-output name=OPENJDK_VERSION::
        jq -r '.openjdkVersion' java/build/alpine/8/version.json

    - name: Get build number
      id: build-number
      run: |
        echo -n ::set-output name=BUILD_NO::
        jq -r '.build' java/build/alpine/8/version.json

    - name: Build Image
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: java-build
        build-args: |
          JDK_RUNTIME_IMG_TAG=${{ steps.jdk-rt-image-tag.outputs.JDK_RT_IMG_TAG }}
          MAVEN_VERSION=${{ steps.maven-version.outputs.MAVEN_VERSION }}
          CHECKSUM=${{ steps.maven-checksum.outputs.MAVEN_CHECKSUM }}
        tags: ${{ steps.openjdk-version.outputs.OPENJDK_VERSION }}-${{ steps.maven-version.outputs.MAVEN_VERSION }}-${{ steps.build-number.outputs.BUILD_NO }}-alpine
        archs: amd64, arm64
        context: java/build/alpine/8/
        containerfiles: java/build/alpine/8/Dockerfile

    - name: Push To quay.io
      id: push-to-quay
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags:  ${{ steps.build-image.outputs.tags }}
        registry: quay.io/${{ secrets.REGISTRY_USERNAME }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Print image url
      run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"
